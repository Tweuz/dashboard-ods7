# Nome do arquivo: app.py

# 1. Importar as bibliotecas
import streamlit as st
import pandas as pd
import plotly.express as px

# 2. Configurar a p√°gina
# Isso define o t√≠tulo que aparece na aba do navegador e usa o layout "wide" para ocupar a tela inteira.
st.set_page_config(page_title="Dashboard ODS 7", layout="wide")

# 3. Carregar os dados
# Esta fun√ß√£o l√™ o nosso arquivo CSV. O @st.cache_data garante que os dados sejam carregados s√≥ uma vez.
@st.cache_data
def carregar_dados():
    df = pd.read_csv('acesso_eletricidade_limpo.csv')
    return df

df = carregar_dados()

# 4. Construir a interface do dashboard

# T√≠tulo principal que aparece na p√°gina.
st.title("üåç Dashboard ODS 7 - Acesso √† Eletricidade")

# Barra lateral para os filtros.
st.sidebar.header("Filtros")

# Cria a lista de pa√≠ses para o menu de sele√ß√£o, em ordem alfab√©tica.
lista_paises = sorted(df['Pais'].unique())

# Cria o menu de sele√ß√£o na barra lateral. O usu√°rio pode escolher v√°rios pa√≠ses.
paises_selecionados = st.sidebar.multiselect(
    label="Escolha os pa√≠ses para visualizar:",
    options=lista_paises,
    default=['Brazil', 'United States', 'China', 'Germany', 'South Africa'] # Pa√≠ses que j√° aparecem selecionados.
)

# 5. Criar as visualiza√ß√µes (gr√°fico e tabela)

# Filtra o DataFrame para conter apenas os dados dos pa√≠ses que o usu√°rio escolheu.
df_filtrado = df[df['Pais'].isin(paises_selecionados)]

# Cria o gr√°fico de linha interativo com Plotly.
fig = px.line(
    df_filtrado,
    x='Ano',
    y='Percentual_Acesso',
    color='Pais', # Cria uma linha de cor diferente para cada pa√≠s.
    title='Evolu√ß√£o do Acesso √† Eletricidade nos Pa√≠ses Selecionados',
    labels={'Percentual_Acesso': '% da Popula√ß√£o com Acesso'}
)

# Mostra o gr√°fico na p√°gina.
st.plotly_chart(fig, use_container_width=True)

# Mostra a tabela de dados abaixo do gr√°fico.
st.dataframe(df_filtrado)